apiVersion: v1
kind: ServiceAccount
metadata:
  name: clay-server
  namespace: clay-system
---
# This role gives the minimal permissions necessary for clay-server to do its job
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: clay-server
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "delete"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["create", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: clay-server
  namespace: clay-scrapers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clay-server
subjects:
  - kind: ServiceAccount
    name: clay-server
    namespace: clay-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clay-server
  namespace: clay-system
  labels:
    app: clay-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clay-server
  template:
    metadata:
      labels:
        app: clay-server
    spec:
      serviceAccountName: clay-server
      containers:
        - name: clay-server
          image: openaustralia/clay-server
          ports:
            - containerPort: 8080
          env:
            - name: STORE_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: clay-server
                  key: store_access_key
            - name: STORE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: clay-server
                  key: store_secret_key
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: password
---
apiVersion: v1
kind: Service
metadata:
  name: clay-server
  namespace: clay-system
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: clay-server

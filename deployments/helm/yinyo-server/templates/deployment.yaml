apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      annotations:
        # Force an upgrade if the configmap is changed
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.server.image }}
          ports:
            - containerPort: 8080
          env:
            - name: RUNS_NAMESPACE
              value: {{ .Values.runNamespace }}
            - name: SERVER_URL
              value: http://{{ .Release.Name }}.{{ .Release.Namespace }}:8080
            - name: STORE_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-store
                  key: host
            - name: STORE_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-store
                  key: bucket
            - name: STORE_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-store
                  key: access_key
            - name: STORE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-store
                  key: secret_key
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-redis
                  key: host
            - name: REDIS_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-redis
                  key: database
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-redis
                  key: password
            - name: REDIS_TLS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-redis
                  key: tls
            - name: RUN_DOCKER_IMAGE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: run_docker_image
            {{- if .Values.authenticationURL }}
            - name: AUTHENTICATION_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: authentication_url
            {{- end }}
            {{- if .Values.resourcesAllowedURL }}
            - name: RESOURCES_ALLOWED_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: resources_allowed_url
            {{- end }}
            {{- if .Values.usageURL }}
            - name: USAGE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: usage_url
            {{- end }}
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
          livenessProbe:
            httpGet:
              path: /
              port: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080

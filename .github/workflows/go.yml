name: test and build
on: [push, pull_request]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x

      - name: setup env
        run: |
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Install golangci-lint
        run: |
          go get github.com/golangci/golangci-lint/cmd/golangci-lint

      - name: Run linters
        run: |
          golangci-lint run

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: setup env
        run: |
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      #Some of the tests invoke the yinyo binary, so we need to install it first
      - name: Install
        run: go install -v ./...

      - name: Test
        run: go test ./... -short

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x

      - name: setup env
        run: |
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::set-env name=CVPKG::$(go list ./... | grep -v mocks | grep -v e2e | tr '\n' ',')"
          echo "::add-path::$(go env GOPATH)/bin"
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Install
        run: go install -v ./...

      - name: Calc coverage
        run: |
          go test -v -short -covermode=count -coverpkg $(CVPKG) -coverprofile=coverage.out ./...

      - name: Convert coverage to lcov
        uses: jandelgado/gcov2lcov-action@v1.0.0
        with:
          infile: coverage.out
          outfile: coverage.lcov

      - name: Coveralls
        uses: coverallsapp/github-action@v1.0.1
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x
      - name: Checkout code
        uses: actions/checkout@v1
      - name: build
        run: |
          export GO111MODULE=on
          mkdir bin/
          #GOOS=windows GOARCH=amd64 go build -o bin ./...
          GOOS=linux   GOARCH=amd64 go build -o bin ./...
      - name: upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: binaries
          path: bin/
